{"ast":null,"code":"var _jsxFileName = \"F:\\\\Blog-Page\\\\client\\\\src\\\\components\\\\create\\\\CreatePost.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Box, FormControl, styled, InputBase, Button, TextareaAutosize } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled(Box)`\n  margin: 50px 100px;\n`;\n_c = Container;\nconst StyledControl = styled(FormControl)`\n  margin-top: 10px;\n  display: flex;\n  flex-direction: row;\n`;\n_c2 = StyledControl;\nconst InputTextField = styled(InputBase)`\n  flex: 1;\n  margin: 0 30px;\n  font-size: 25px;\n`;\n_c3 = InputTextField;\nconst Textarea = styled(TextareaAutosize)`\n  width: 100%;\n  margin-top: 50px;\n  font-size: 18px;\n  border: none;\n  &:focus-visible {\n    outline: none;\n  }\n`;\n_c4 = Textarea;\nconst initialPost = {\n  title: '',\n  description: '',\n  username: '',\n  createdDate: new Date()\n};\nconst CreatePost = () => {\n  _s();\n  const [post, setPost] = useState(initialPost);\n  const handleTitleChange = e => {\n    const inputValue = e.target.value;\n    // Regular expression to check if the input contains digits only\n    const regex = /^\\d*$/;\n    // Check if the input value contains only digits\n    if (!regex.test(inputValue)) {\n      setPost({\n        ...post,\n        title: inputValue\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(StyledControl, {\n      children: [/*#__PURE__*/_jsxDEV(InputTextField, {\n        placeholder: \"title\",\n        value: post.title,\n        onChange: handleTitleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        children: \"publish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n      minRows: 5,\n      placeholder: \"tell me story.............\",\n      value: post.description,\n      onChange: e => setPost({\n        ...post,\n        description: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(CreatePost, \"bPr6z4isUkqgTot8vC1UqDENcS8=\");\n_c5 = CreatePost;\nexport default CreatePost;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"StyledControl\");\n$RefreshReg$(_c3, \"InputTextField\");\n$RefreshReg$(_c4, \"Textarea\");\n$RefreshReg$(_c5, \"CreatePost\");","map":{"version":3,"names":["React","useState","Box","FormControl","styled","InputBase","Button","TextareaAutosize","jsxDEV","_jsxDEV","Container","_c","StyledControl","_c2","InputTextField","_c3","Textarea","_c4","initialPost","title","description","username","createdDate","Date","CreatePost","_s","post","setPost","handleTitleChange","e","inputValue","target","value","regex","test","children","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","variant","minRows","_c5","$RefreshReg$"],"sources":["F:/Blog-Page/client/src/components/create/CreatePost.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Box, FormControl, styled, InputBase, Button, TextareaAutosize } from \"@mui/material\";\r\n\r\nconst Container = styled(Box)`\r\n  margin: 50px 100px;\r\n`;\r\n\r\nconst StyledControl = styled(FormControl)`\r\n  margin-top: 10px;\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst InputTextField = styled(InputBase)`\r\n  flex: 1;\r\n  margin: 0 30px;\r\n  font-size: 25px;\r\n`;\r\n\r\nconst Textarea = styled(TextareaAutosize)`\r\n  width: 100%;\r\n  margin-top: 50px;\r\n  font-size: 18px;\r\n  border: none;\r\n  &:focus-visible {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst initialPost = {\r\n  title: '',\r\n  description: '',\r\n  username: '',\r\n  createdDate: new Date()\r\n};\r\n\r\nconst CreatePost = () => {\r\n  const [post, setPost] = useState(initialPost);\r\n\r\n  const handleTitleChange = (e) => {\r\n    const inputValue = e.target.value;\r\n    // Regular expression to check if the input contains digits only\r\n    const regex = /^\\d*$/;\r\n    // Check if the input value contains only digits\r\n    if (!regex.test(inputValue)) {\r\n      setPost({ ...post, title: inputValue });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <StyledControl>\r\n        <InputTextField\r\n          placeholder=\"title\"\r\n          value={post.title}\r\n          onChange={handleTitleChange}\r\n        />\r\n        <Button variant=\"contained\">\r\n          publish\r\n        </Button>\r\n      </StyledControl>\r\n      <Textarea\r\n        minRows={5}\r\n        placeholder=\"tell me story.............\"\r\n        value={post.description}\r\n        onChange={(e) => setPost({ ...post, description: e.target.value })}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CreatePost;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}