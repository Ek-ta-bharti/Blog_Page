{"ast":null,"code":"var _jsxFileName = \"F:\\\\Blog-Page\\\\client\\\\src\\\\components\\\\account\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\n// Importing the useState hook from React\nimport { Box, TextField, Button, styled } from '@mui/material';\n// Importing Box, TextField, Button, and styled components from Material-UI\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Component = styled(Box)` \n  width: 500px; \n  margin: auto; \n  box-shadow: 5px 2px 5px 2px rgb(0 0 0 / 0.6); \n  background: linear-gradient(to right, black 50%, white 50%); \n`;\n// Styling the Box component\n// Setting the width of the component to 500px\n// Setting margin to auto for center alignment\n// Adding a box shadow\n// Adding a linear gradient background\n_c = Component;\nconst Image = styled('img')` \n  width: 100px; \n  display: flex; \n  margin: auto; \n  padding: 50px 0 0;\n`;\n// Styling the img tag\n// Setting the width of the image to 100px\n// Setting display to flex\n// Centering the image horizontally\n_c2 = Image;\nconst Wrapper = styled(Box)` // Styling the Box component\n  padding: 30px 30px; // Adding padding to the wrapper\n  display: flex; // Setting display to flex\n  flex-direction: column; // Setting flex-direction to column\n  align-items: center; // Centering items horizontally\n  & > * {\n    margin-bottom: 10px; // Adding margin-bottom to direct children\n  }\n`;\n_c3 = Wrapper;\nconst StyledTextField = styled(TextField)` // Styling the TextField component\n  color: ${({\n  focused\n}) => focused ? 'green' : 'inherit'}; // Changing text color based on focus\n  background: ${({\n  focused\n}) => focused ? 'linear-gradient(90deg, white 50%, black 50%)' : 'inherit'}; // Changing background color based on focus\n`;\n_c4 = StyledTextField;\nconst SignUpButton = styled(Button)(({\n  theme,\n  isClicked\n}) => ({\n  // Styling the SignUpButton component\n  background: isClicked ? 'white' : 'black',\n  // Setting background color based on isClicked state\n  color: isClicked ? 'white' : 'black',\n  // Setting text color based on isClicked state\n  transition: 'background-color 0.3s, color 0.3s',\n  // Adding transition effect for color change\n  boxShadow: isClicked ? '0px 0px 10px 9px rgba(255, 255, 255, 0.9)' : 'none',\n  // Adding box shadow based on isClicked state\n  height: '40px',\n  // Setting height\n  width: '100px',\n  // Setting width\n  margin: '19px 30px',\n  // Setting margin\n  '&:hover': {\n    backgroundColor: isClicked ? 'black' : 'black',\n    // Changing background color on hover\n    boxShadow: isClicked ? '0px 0px 10px 9px rgba(255, 255, 255, 0.9)' : '0px 0px 10px 9px rgba(0, 0, 0, 0.9)' // Changing box shadow on hover\n  },\n  [theme.breakpoints.down('sm')]: {} // Adding breakpoint styles\n}));\n_c5 = SignUpButton;\nconst LoginButton = styled(Button)(({\n  theme,\n  isClicked\n}) => ({\n  // Styling the LoginButton component\n  background: isClicked ? 'white' : 'black',\n  // Setting background color based on isClicked state\n  color: isClicked ? 'black' : 'white',\n  // Setting text color based on isClicked state\n  boxShadow: isClicked ? '0px 0px 10px 9px rgba(255, 255, 255, 0.9)' : 'none',\n  // Adding box shadow based on isClicked state\n  transition: 'background-color 0.3s, color 0.3s',\n  // Adding transition effect for color change\n  height: '40px',\n  // Setting height\n  width: '100px',\n  // Setting width\n  margin: '29px 35px',\n  // Setting margin\n  '&:hover': {\n    backgroundColor: 'black',\n    // Changing background color on hover\n    boxShadow: isClicked ? '0px 0px 10px 9px rgba(255, 255, 255, 0.9)' : '0px 0px 10px 9px rgba(0, 0, 0, 0.9)' // Changing box shadow on hover\n  },\n  [theme.breakpoints.down('sm')]: {} // Adding breakpoint styles\n}));\n_c6 = LoginButton;\nconst BoldGreenText = styled('span')` // Styling the span element\n  color: green; // Setting text color to green\n  font-weight: bold; // Setting font weight to bold\n`;\nconst Label = styled('span')` // Styling the span element\n  color: black; // Setting text color to black\n  font-weight: bold; // Setting font weight to bold\n  text-align: center; // Setting text alignment to center\n`;\n_c7 = Label;\nconst BoldBlackText = styled('span')` // Styling the span element\n  color: black; // Setting text color to black\n  font-weight: bold; // Setting font weight to bold\n  text-align: center; // Setting text alignment to center\n`;\n_c8 = BoldBlackText;\nconst BoldWhiteText = styled('span')` // Styling the span element\n  color: white; // Setting text color to white\n  font-weight: bold; // Setting font weight to bold\n  text-align: center; // Setting text alignment to center\n`;\n_c9 = BoldWhiteText;\nconst Login = () => {\n  _s();\n  // Creating the Login component\n  const imageURL = 'https://www.sesta.it/wp-content/uploads/2021/03/logo-blog-sesta-trasparente.png'; // Image URL\n\n  const [isSignUpClicked, setSignUpClicked] = useState(false); // State for sign-up button click\n  const [isLoginClicked, setLoginClicked] = useState(true); // State for login button click\n  const [isUsernameFocused, setIsUsernameFocused] = useState(false); // State for focusing on username field\n\n  const handleFocus = () => {\n    // Function to handle input focus\n    setIsUsernameFocused(true); // Set isUsernameFocused state to true\n  };\n  const handleBlur = () => {\n    // Function to handle input blur\n    setIsUsernameFocused(false); // Set isUsernameFocused state to false\n  };\n  const toggleSignup = () => {\n    // Function to toggle sign-up button\n    setSignUpClicked(true); // Set sign-up click state to true\n    setLoginClicked(false); // Set login click state to false\n  };\n  const toggleLogin = () => {\n    // Function to toggle login button\n    setSignUpClicked(false); // Set sign-up click state to false\n    setLoginClicked(true); // Set login click state to true\n  };\n  return /*#__PURE__*/_jsxDEV(Component, {\n    children: [\" // Rendering the styled component\", /*#__PURE__*/_jsxDEV(Box, {\n      children: [\" // Rendering a Box component\", /*#__PURE__*/_jsxDEV(Image, {\n        src: imageURL,\n        alt: \"login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), \" // Rendering the image\", /*#__PURE__*/_jsxDEV(Wrapper, {\n        children: [\" // Rendering the styled wrapper\", /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" // Opening a div container\", isLoginClicked ?\n          /*#__PURE__*/\n          // Conditional rendering based on login click state\n          _jsxDEV(_Fragment, {\n            children: [\" // Opening a fragment\", /*#__PURE__*/_jsxDEV(LoginButton, {\n              variant: \"contained\",\n              onClick: toggleLogin,\n              isClicked: isLoginClicked,\n              children: [\" // Rendering the LoginButton component\", /*#__PURE__*/_jsxDEV(BoldBlackText, {\n                children: \"Log in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, this), \" // Rendering bold black text\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this), \" // Closing the LoginButton component\", /*#__PURE__*/_jsxDEV(SignUpButton, {\n              onClick: toggleSignup,\n              variant: \"contained\",\n              isClicked: isSignUpClicked,\n              children: [\" // Rendering the SignUpButton component\", /*#__PURE__*/_jsxDEV(BoldWhiteText, {\n                children: \"Sign up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 19\n              }, this), \" // Rendering bold white text\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this), \" // Closing the SignUpButton component\"]\n          }, void 0, true) // Closing the fragment\n          :\n          /*#__PURE__*/\n          // Condition for sign-up button click\n          _jsxDEV(_Fragment, {\n            children: [\" // Opening a fragment\", /*#__PURE__*/_jsxDEV(SignUpButton, {\n              onClick: toggleSignup,\n              variant: \"contained\",\n              isClicked: isSignUpClicked,\n              children: [\" // Rendering the SignUpButton component\", /*#__PURE__*/_jsxDEV(BoldBlackText, {\n                children: \"Sign up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 19\n              }, this), \" // Rendering bold black text\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this), \" // Closing the SignUpButton component\", /*#__PURE__*/_jsxDEV(LoginButton, {\n              variant: \"contained\",\n              onClick: toggleLogin,\n              isClicked: isLoginClicked,\n              children: [\" // Rendering the LoginButton component\", /*#__PURE__*/_jsxDEV(BoldWhiteText, {\n                children: \"Log in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 19\n              }, this), \" // Rendering bold white text\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this), \" // Closing the LoginButton component\"]\n          }, void 0, true) // Closing the fragment\n          ]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), \" // Closing the div container\", isLoginClicked ?\n        /*#__PURE__*/\n        // Conditional rendering for login button click\n        _jsxDEV(_Fragment, {\n          children: [\" // Opening a fragment\", /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: [\" // Opening a div container with styling\", /*#__PURE__*/_jsxDEV(Label, {\n              style: {\n                backgroundColor: 'white',\n                height: '30px',\n                width: '120px',\n                display: 'inline-block',\n                textAlign: 'center'\n              },\n              children: \" UserName\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this), \" // Rendering a label\", /*#__PURE__*/_jsxDEV(StyledTextField // Rendering the StyledTextField component\n            , {\n              variant: \"standard\",\n              placeholder: \"User Name\",\n              InputLabelProps: {\n                style: {\n                  display: 'none'\n                } // Hide label when TextField is focused\n              },\n              InputProps: {\n                style: {\n                  color: isUsernameFocused ? 'white' : 'inherit',\n                  background: 'black'\n                },\n                // Setting input text color and background based on focus\n                placeholderTextColor: 'white' // Set placeholder text color\n              },\n              sx: {\n                marginBottom: '10px',\n                marginLeft: '110px'\n              } // Adding styling\n              ,\n              onFocus: handleFocus // Handling input focus\n              ,\n              onBlur: handleBlur // Handling input blur\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this), \" // Closing the div container\", /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: [\" // Opening a div container with styling\", /*#__PURE__*/_jsxDEV(Label, {\n              style: {\n                backgroundColor: 'white',\n                height: '30px',\n                width: '120px',\n                display: 'inline-block',\n                textAlign: 'center'\n              },\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this), \" // Rendering a label\", /*#__PURE__*/_jsxDEV(StyledTextField // Rendering the StyledTextField component\n            , {\n              variant: \"standard\",\n              placeholder: \"User Password\",\n              InputLabelProps: {\n                style: {\n                  display: 'none'\n                } // Hide label when TextField is focused\n              },\n              InputProps: {\n                style: {\n                  color: isUsernameFocused ? 'white' : 'inherit',\n                  background: 'black'\n                },\n                // Setting input text color and background based on focus\n                placeholderTextColor: 'white' // Set placeholder text color\n              },\n              sx: {\n                marginBottom: '10px',\n                marginLeft: '110px'\n              } // Adding styling\n              ,\n              onFocus: handleFocus // Handling input focus\n              ,\n              onBlur: handleBlur // Handling input blur\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this), \" // Closing the div container\", /*#__PURE__*/_jsxDEV(Button // Rendering a Button component\n          , {\n            variant: \"contained\",\n            style: {\n              width: '60%',\n              // Setting width\n              background: 'linear-gradient(to right, white 53%, black 49%)',\n              // Adding a linear gradient background\n              color: 'green',\n              // Setting text color\n              marginBottom: '10px' // Adding margin bottom\n            },\n            children: [/*#__PURE__*/_jsxDEV(BoldBlackText, {\n              children: \"Log.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this), \" // Rendering bold black text\", /*#__PURE__*/_jsxDEV(BoldWhiteText, {\n              children: \"in\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this), \" // Rendering bold white text\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this), \" // Closing the Button component\"]\n        }, void 0, true) // Closing the fragment\n        :\n        /*#__PURE__*/\n        // Condition for sign-up button click\n        _jsxDEV(_Fragment, {\n          children: [\" // Opening a fragment\", /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: [\" // Opening a div container with styling\", /*#__PURE__*/_jsxDEV(Label, {\n              style: {\n                backgroundColor: 'white',\n                height: '30px',\n                width: '120px',\n                display: 'inline-block',\n                textAlign: 'center'\n              },\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this), \" // Rendering a label\", /*#__PURE__*/_jsxDEV(StyledTextField // Rendering the StyledTextField component\n            , {\n              variant: \"standard\",\n              placeholder: \"Your Name\",\n              InputLabelProps: {\n                style: {\n                  display: 'none'\n                } // Hide label when TextField is focused\n              },\n              InputProps: {\n                style: {\n                  color: isUsernameFocused ? 'white' : 'inherit',\n                  background: 'black'\n                },\n                // Setting input text color and background based on focus\n                placeholderTextColor: 'white' // Set placeholder text color\n              },\n              sx: {\n                marginBottom: '10px',\n                marginLeft: '110px'\n              } // Adding styling\n              ,\n              onFocus: handleFocus // Handling input focus\n              ,\n              onBlur: handleBlur // Handling input blur\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this), \" // Closing the div container\", /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: [\" // Opening a div container with styling\", /*#__PURE__*/_jsxDEV(Label, {\n              style: {\n                backgroundColor: 'white',\n                height: '30px',\n                width: '120px',\n                display: 'inline-block',\n                textAlign: 'center'\n              },\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this), \" // Rendering a label\", /*#__PURE__*/_jsxDEV(StyledTextField // Rendering the StyledTextField component\n            , {\n              variant: \"standard\",\n              placeholder: \"Your UserName\",\n              InputLabelProps: {\n                style: {\n                  display: 'none'\n                } // Hide label when TextField is focused\n              },\n              InputProps: {\n                style: {\n                  color: isUsernameFocused ? 'white' : 'inherit',\n                  background: 'black'\n                },\n                // Setting input text color and background based on focus\n                placeholderTextColor: 'white' // Set placeholder text color\n              },\n              sx: {\n                marginBottom: '10px',\n                marginLeft: '110px'\n              } // Adding styling\n              ,\n              onFocus: handleFocus // Handling input focus\n              ,\n              onBlur: handleBlur // Handling input blur\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this), \" // Closing the div container\", /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: [\" // Opening a div container with styling\", /*#__PURE__*/_jsxDEV(Label, {\n              style: {\n                backgroundColor: 'white',\n                height: '30px',\n                width: '120px',\n                display: 'inline-block',\n                textAlign: 'center'\n              },\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this), \" // Rendering a label\", /*#__PURE__*/_jsxDEV(StyledTextField // Rendering the StyledTextField component\n            , {\n              variant: \"standard\",\n              placeholder: \"Your Password\",\n              InputLabelProps: {\n                style: {\n                  display: 'none'\n                } // Hide label when TextField is focused\n              },\n              InputProps: {\n                style: {\n                  color: isUsernameFocused ? 'white' : 'inherit',\n                  background: 'black'\n                },\n                // Setting input text color and background based on focus\n                placeholderTextColor: 'white' // Set placeholder text color\n              },\n              sx: {\n                marginBottom: '10px',\n                marginLeft: '110px'\n              } // Adding styling\n              ,\n              onFocus: handleFocus // Handling input focus\n              ,\n              onBlur: handleBlur // Handling input blur\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this), \" // Closing the div container\", /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: [\" // Opening a div container with styling\", /*#__PURE__*/_jsxDEV(Label, {\n              style: {\n                backgroundColor: 'white',\n                height: '30px',\n                width: '120px',\n                display: 'inline-block',\n                textAlign: 'center'\n              },\n              children: \"Gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 17\n            }, this), \" // Rendering a label\", /*#__PURE__*/_jsxDEV(StyledTextField // Rendering the StyledTextField component\n            , {\n              variant: \"standard\",\n              placeholder: \"Your Gender\",\n              InputLabelProps: {\n                style: {\n                  display: 'none'\n                } // Hide label when TextField is focused\n              },\n              InputProps: {\n                style: {\n                  color: isUsernameFocused ? 'white' : 'inherit',\n                  background: 'black'\n                },\n                // Setting input text color and background based on focus\n                placeholderTextColor: 'white' // Set placeholder text color\n              },\n              sx: {\n                marginBottom: '10px',\n                marginLeft: '110px'\n              } // Adding styling\n              ,\n              onFocus: handleFocus // Handling input focus\n              ,\n              onBlur: handleBlur // Handling input blur\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this), \" // Closing the div container\", /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: [\" // Opening a div container with styling\", /*#__PURE__*/_jsxDEV(Label, {\n              style: {\n                backgroundColor: 'white',\n                height: '30px',\n                width: '120px',\n                display: 'inline-block',\n                textAlign: 'center'\n              },\n              children: \"Age\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this), \" // Rendering a label\", /*#__PURE__*/_jsxDEV(StyledTextField // Rendering the StyledTextField component\n            , {\n              variant: \"standard\",\n              placeholder: \"Your Age\",\n              InputLabelProps: {\n                style: {\n                  display: 'none'\n                } // Hide label when TextField is focused\n              },\n              InputProps: {\n                style: {\n                  color: isUsernameFocused ? 'white' : 'inherit',\n                  background: 'black'\n                },\n                // Setting input text color and background based on focus\n                placeholderTextColor: 'white' // Set placeholder text color\n              },\n              sx: {\n                marginBottom: '10px',\n                marginLeft: '110px'\n              } // Adding styling\n              ,\n              onFocus: handleFocus // Handling input focus\n              ,\n              onBlur: handleBlur // Handling input blur\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this), \" // Closing the div container\", /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: [\" // Opening a div container with styling\", /*#__PURE__*/_jsxDEV(Label, {\n              style: {\n                backgroundColor: 'white',\n                height: '30px',\n                width: '120px',\n                display: 'inline-block',\n                textAlign: 'center'\n              },\n              children: \"Mobile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 17\n            }, this), \" // Rendering a label\", /*#__PURE__*/_jsxDEV(StyledTextField // Rendering the StyledTextField component\n            , {\n              variant: \"standard\",\n              placeholder: \"Your Mobile.No\",\n              InputLabelProps: {\n                style: {\n                  display: 'none'\n                } // Hide label when TextField is focused\n              },\n              InputProps: {\n                style: {\n                  color: isUsernameFocused ? 'white' : 'inherit',\n                  background: 'black'\n                },\n                // Setting input text color and background based on focus\n                placeholderTextColor: 'white' // Set placeholder text color\n              },\n              sx: {\n                marginBottom: '10px',\n                marginLeft: '110px'\n              } // Adding styling\n              ,\n              onFocus: handleFocus // Handling input focus\n              ,\n              onBlur: handleBlur // Handling input blur\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 15\n          }, this), \" // Closing the div container\", /*#__PURE__*/_jsxDEV(Button // Rendering a Button component\n          , {\n            variant: \"contained\",\n            style: {\n              width: '60%',\n              // Setting width\n              background: 'linear-gradient(to right, white 48%, black 50%)',\n              // Adding a linear gradient background\n              color: 'green',\n              // Setting text color\n              marginBottom: '10px' // Adding margin bottom\n            },\n            children: [/*#__PURE__*/_jsxDEV(BoldBlackText, {\n              children: \"Sig\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 18\n            }, this), \" // Rendering bold black text\", /*#__PURE__*/_jsxDEV(BoldWhiteText, {\n              children: \" nup\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 17\n            }, this), \" // Rendering bold white text\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 15\n          }, this), \" // Closing the Button component\"]\n        }, void 0, true) // Closing the fragment\n        ]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), \" // Closing the styled wrapper\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), \" // Closing the Box component\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this) // Closing the styled component\n  ;\n};\n_s(Login, \"Ax86jTmy5xw1wQ1SfEaNFi8W29k=\");\n_c10 = Login;\nexport default Login; // Exporting the Login component\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n$RefreshReg$(_c, \"Component\");\n$RefreshReg$(_c2, \"Image\");\n$RefreshReg$(_c3, \"Wrapper\");\n$RefreshReg$(_c4, \"StyledTextField\");\n$RefreshReg$(_c5, \"SignUpButton\");\n$RefreshReg$(_c6, \"LoginButton\");\n$RefreshReg$(_c7, \"Label\");\n$RefreshReg$(_c8, \"BoldBlackText\");\n$RefreshReg$(_c9, \"BoldWhiteText\");\n$RefreshReg$(_c10, \"Login\");","map":{"version":3,"names":["useState","Box","TextField","Button","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","Component","_c","Image","_c2","Wrapper","_c3","StyledTextField","focused","_c4","SignUpButton","theme","isClicked","background","color","transition","boxShadow","height","width","margin","backgroundColor","breakpoints","down","_c5","LoginButton","_c6","BoldGreenText","Label","_c7","BoldBlackText","_c8","BoldWhiteText","_c9","Login","_s","imageURL","isSignUpClicked","setSignUpClicked","isLoginClicked","setLoginClicked","isUsernameFocused","setIsUsernameFocused","handleFocus","handleBlur","toggleSignup","toggleLogin","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","style","display","alignItems","textAlign","placeholder","InputLabelProps","InputProps","placeholderTextColor","sx","marginBottom","marginLeft","onFocus","onBlur","_c10","$RefreshReg$"],"sources":["F:/Blog-Page/client/src/components/account/Login.jsx"],"sourcesContent":["import { useState } from 'react'; \r\n// Importing the useState hook from React\r\nimport { Box, TextField, Button, styled } from '@mui/material'; \r\n// Importing Box, TextField, Button, and styled components from Material-UI\r\n\r\nconst Component = styled(Box)` \r\n  width: 500px; \r\n  margin: auto; \r\n  box-shadow: 5px 2px 5px 2px rgb(0 0 0 / 0.6); \r\n  background: linear-gradient(to right, black 50%, white 50%); \r\n`;\r\n// Styling the Box component\r\n// Setting the width of the component to 500px\r\n// Setting margin to auto for center alignment\r\n// Adding a box shadow\r\n// Adding a linear gradient background\r\n \r\nconst Image = styled('img')` \r\n  width: 100px; \r\n  display: flex; \r\n  margin: auto; \r\n  padding: 50px 0 0;\r\n`;\r\n// Styling the img tag\r\n// Setting the width of the image to 100px\r\n// Setting display to flex\r\n// Centering the image horizontally\r\n\r\nconst Wrapper = styled(Box)` // Styling the Box component\r\n  padding: 30px 30px; // Adding padding to the wrapper\r\n  display: flex; // Setting display to flex\r\n  flex-direction: column; // Setting flex-direction to column\r\n  align-items: center; // Centering items horizontally\r\n  & > * {\r\n    margin-bottom: 10px; // Adding margin-bottom to direct children\r\n  }\r\n`;\r\n\r\nconst StyledTextField = styled(TextField)` // Styling the TextField component\r\n  color: ${({ focused }) => focused ? 'green' : 'inherit'}; // Changing text color based on focus\r\n  background: ${({ focused }) => focused ? 'linear-gradient(90deg, white 50%, black 50%)' : 'inherit'}; // Changing background color based on focus\r\n`;\r\n\r\nconst SignUpButton = styled(Button)(({ theme, isClicked }) => ({ // Styling the SignUpButton component\r\n  background: isClicked ? 'white' : 'black', // Setting background color based on isClicked state\r\n  color: isClicked ? 'white' : 'black', // Setting text color based on isClicked state\r\n  transition: 'background-color 0.3s, color 0.3s', // Adding transition effect for color change\r\n  boxShadow: isClicked ? '0px 0px 10px 9px rgba(255, 255, 255, 0.9)' : 'none', // Adding box shadow based on isClicked state\r\n  height: '40px', // Setting height\r\n  width: '100px', // Setting width\r\n  margin: '19px 30px', // Setting margin\r\n  '&:hover': {\r\n    backgroundColor: isClicked ? 'black' : 'black', // Changing background color on hover\r\n    boxShadow: isClicked ? '0px 0px 10px 9px rgba(255, 255, 255, 0.9)' : '0px 0px 10px 9px rgba(0, 0, 0, 0.9)', // Changing box shadow on hover\r\n  },\r\n  [theme.breakpoints.down('sm')]: {}, // Adding breakpoint styles\r\n}));\r\n\r\nconst LoginButton = styled(Button)(({ theme, isClicked }) => ({ // Styling the LoginButton component\r\n  background: isClicked ? 'white' : 'black', // Setting background color based on isClicked state\r\n  color: isClicked ? 'black' : 'white', // Setting text color based on isClicked state\r\n  boxShadow: isClicked ? '0px 0px 10px 9px rgba(255, 255, 255, 0.9)' : 'none', // Adding box shadow based on isClicked state\r\n  transition: 'background-color 0.3s, color 0.3s', // Adding transition effect for color change\r\n  height: '40px', // Setting height\r\n  width: '100px', // Setting width\r\n  margin: '29px 35px', // Setting margin\r\n  '&:hover': {\r\n    backgroundColor: 'black', // Changing background color on hover\r\n    boxShadow: isClicked ? '0px 0px 10px 9px rgba(255, 255, 255, 0.9)' : '0px 0px 10px 9px rgba(0, 0, 0, 0.9)', // Changing box shadow on hover\r\n  },\r\n  [theme.breakpoints.down('sm')]: {}, // Adding breakpoint styles\r\n}));\r\n\r\nconst BoldGreenText = styled('span')` // Styling the span element\r\n  color: green; // Setting text color to green\r\n  font-weight: bold; // Setting font weight to bold\r\n`;\r\n\r\nconst Label = styled('span')` // Styling the span element\r\n  color: black; // Setting text color to black\r\n  font-weight: bold; // Setting font weight to bold\r\n  text-align: center; // Setting text alignment to center\r\n`;\r\n\r\nconst BoldBlackText = styled('span')` // Styling the span element\r\n  color: black; // Setting text color to black\r\n  font-weight: bold; // Setting font weight to bold\r\n  text-align: center; // Setting text alignment to center\r\n`;\r\n\r\nconst BoldWhiteText = styled('span')` // Styling the span element\r\n  color: white; // Setting text color to white\r\n  font-weight: bold; // Setting font weight to bold\r\n  text-align: center; // Setting text alignment to center\r\n`;\r\n\r\nconst Login = () => { // Creating the Login component\r\n  const imageURL = 'https://www.sesta.it/wp-content/uploads/2021/03/logo-blog-sesta-trasparente.png'; // Image URL\r\n\r\n  const [isSignUpClicked, setSignUpClicked] = useState(false); // State for sign-up button click\r\n  const [isLoginClicked, setLoginClicked] = useState(true); // State for login button click\r\n  const [isUsernameFocused, setIsUsernameFocused] = useState(false); // State for focusing on username field\r\n\r\n  const handleFocus = () => { // Function to handle input focus\r\n    setIsUsernameFocused(true); // Set isUsernameFocused state to true\r\n  };\r\n\r\n  const handleBlur = () => { // Function to handle input blur\r\n    setIsUsernameFocused(false); // Set isUsernameFocused state to false\r\n  };\r\n\r\n  const toggleSignup = () => { // Function to toggle sign-up button\r\n    setSignUpClicked(true); // Set sign-up click state to true\r\n    setLoginClicked(false); // Set login click state to false\r\n  };\r\n\r\n  const toggleLogin = () => { // Function to toggle login button\r\n    setSignUpClicked(false); // Set sign-up click state to false\r\n    setLoginClicked(true); // Set login click state to true\r\n  };\r\n\r\n  return (\r\n    <Component> // Rendering the styled component\r\n      <Box> // Rendering a Box component\r\n        <Image src={imageURL} alt=\"login\" /> // Rendering the image\r\n        <Wrapper> // Rendering the styled wrapper\r\n          <div> // Opening a div container\r\n            {isLoginClicked ? ( // Conditional rendering based on login click state\r\n              <> // Opening a fragment\r\n                <LoginButton variant=\"contained\" onClick={toggleLogin} isClicked={isLoginClicked}> // Rendering the LoginButton component\r\n                  <BoldBlackText>Log in</BoldBlackText> // Rendering bold black text\r\n                </LoginButton> // Closing the LoginButton component\r\n                <SignUpButton onClick={toggleSignup} variant=\"contained\" isClicked={isSignUpClicked}> // Rendering the SignUpButton component\r\n                  <BoldWhiteText>Sign up</BoldWhiteText> // Rendering bold white text\r\n                </SignUpButton> // Closing the SignUpButton component\r\n              </> // Closing the fragment\r\n            ) : ( // Condition for sign-up button click\r\n              <> // Opening a fragment\r\n                <SignUpButton onClick={toggleSignup} variant=\"contained\" isClicked={isSignUpClicked}> // Rendering the SignUpButton component\r\n                  <BoldBlackText>Sign up</BoldBlackText> // Rendering bold black text\r\n                </SignUpButton> // Closing the SignUpButton component\r\n                <LoginButton variant=\"contained\" onClick={toggleLogin} isClicked={isLoginClicked}> // Rendering the LoginButton component\r\n                  <BoldWhiteText>Log in</BoldWhiteText> // Rendering bold white text\r\n                </LoginButton> // Closing the LoginButton component\r\n              </> // Closing the fragment\r\n            )}\r\n          </div> // Closing the div container\r\n          {isLoginClicked ? ( // Conditional rendering for login button click\r\n            <> // Opening a fragment\r\n              <div style={{ display: 'flex', alignItems: 'center' }}> // Opening a div container with styling\r\n                <Label style={{ backgroundColor: 'white', height: '30px', width: '120px', display: 'inline-block', textAlign: 'center' }}> UserName</Label> // Rendering a label\r\n                <StyledTextField // Rendering the StyledTextField component\r\n                  variant=\"standard\"\r\n                  placeholder=\"User Name\"\r\n                  InputLabelProps={{\r\n                    style: { display: 'none' }, // Hide label when TextField is focused\r\n                  }}\r\n                  InputProps={{\r\n                    style: { color: isUsernameFocused ? 'white' : 'inherit', background: 'black' }, // Setting input text color and background based on focus\r\n                    placeholderTextColor: 'white', // Set placeholder text color\r\n                  }}\r\n                  sx={{ marginBottom: '10px',  marginLeft:'110px' }} // Adding styling\r\n                  onFocus={handleFocus} // Handling input focus\r\n                  onBlur={handleBlur} // Handling input blur\r\n                />\r\n              </div> // Closing the div container\r\n              <div style={{ display: 'flex', alignItems: 'center' }}> // Opening a div container with styling\r\n                <Label style={{ backgroundColor: 'white', height: '30px', width: '120px', display: 'inline-block', textAlign: 'center' }}>Password</Label> // Rendering a label\r\n                <StyledTextField // Rendering the StyledTextField component\r\n                  variant=\"standard\"\r\n                  placeholder=\"User Password\"\r\n                  InputLabelProps={{\r\n                    style: { display: 'none' }, // Hide label when TextField is focused\r\n                  }}\r\n                  InputProps={{\r\n                    style: { color: isUsernameFocused ? 'white' : 'inherit', background: 'black' }, // Setting input text color and background based on focus\r\n                    placeholderTextColor: 'white', // Set placeholder text color\r\n                  }}\r\n                  sx={{ marginBottom: '10px', marginLeft: '110px' }} // Adding styling\r\n                  onFocus={handleFocus} // Handling input focus\r\n                  onBlur={handleBlur} // Handling input blur\r\n                />\r\n              </div> // Closing the div container\r\n              <Button // Rendering a Button component\r\n                variant=\"contained\"\r\n                style={{\r\n                  width: '60%', // Setting width\r\n                  background: 'linear-gradient(to right, white 53%, black 49%)', // Adding a linear gradient background\r\n                  color: 'green', // Setting text color\r\n                  marginBottom: '10px', // Adding margin bottom\r\n                }}\r\n              >\r\n                <BoldBlackText>Log.</BoldBlackText> // Rendering bold black text\r\n                <BoldWhiteText>in</BoldWhiteText> // Rendering bold white text\r\n              </Button> // Closing the Button component\r\n            </> // Closing the fragment\r\n          ) : ( // Condition for sign-up button click\r\n            <> // Opening a fragment\r\n              <div style={{ display: 'flex', alignItems: 'center' }}> // Opening a div container with styling\r\n                <Label style={{ backgroundColor: 'white', height: '30px', width: '120px', display: 'inline-block', textAlign: 'center' }}>Name</Label> // Rendering a label\r\n                <StyledTextField // Rendering the StyledTextField component\r\n                  variant=\"standard\"\r\n                  placeholder=\"Your Name\"\r\n                  InputLabelProps={{\r\n                    style: { display: 'none' }, // Hide label when TextField is focused\r\n                  }}\r\n                  InputProps={{\r\n                    style: { color: isUsernameFocused ? 'white' : 'inherit', background: 'black' }, // Setting input text color and background based on focus\r\n                    placeholderTextColor: 'white', // Set placeholder text color\r\n                  }}\r\n                  sx={{ marginBottom: '10px', marginLeft: '110px' }} // Adding styling\r\n                  onFocus={handleFocus} // Handling input focus\r\n                  onBlur={handleBlur} // Handling input blur\r\n                />\r\n              </div> // Closing the div container\r\n              <div style={{ display: 'flex', alignItems: 'center' }}> // Opening a div container with styling\r\n                <Label style={{ backgroundColor: 'white', height: '30px', width: '120px', display: 'inline-block', textAlign: 'center' }}>Username</Label> // Rendering a label\r\n                <StyledTextField // Rendering the StyledTextField component\r\n                  variant=\"standard\"\r\n                  placeholder=\"Your UserName\"\r\n                  InputLabelProps={{\r\n                    style: { display: 'none' }, // Hide label when TextField is focused\r\n                  }}\r\n                  InputProps={{\r\n                    style: { color: isUsernameFocused ? 'white' : 'inherit', background: 'black' }, // Setting input text color and background based on focus\r\n                    placeholderTextColor: 'white', // Set placeholder text color\r\n                  }}\r\n                  sx={{ marginBottom: '10px', marginLeft: '110px' }} // Adding styling\r\n                  onFocus={handleFocus} // Handling input focus\r\n                  onBlur={handleBlur} // Handling input blur\r\n                />\r\n              </div> // Closing the div container\r\n              <div style={{ display: 'flex', alignItems: 'center' }}> // Opening a div container with styling\r\n                <Label style={{ backgroundColor: 'white', height: '30px', width: '120px', display: 'inline-block', textAlign: 'center' }}>Password</Label> // Rendering a label\r\n                <StyledTextField // Rendering the StyledTextField component\r\n                  variant=\"standard\"\r\n                  placeholder=\"Your Password\"\r\n                  InputLabelProps={{\r\n                    style: { display: 'none' }, // Hide label when TextField is focused\r\n                  }}\r\n                  InputProps={{\r\n                    style: { color: isUsernameFocused ? 'white' : 'inherit', background: 'black' }, // Setting input text color and background based on focus\r\n                    placeholderTextColor: 'white', // Set placeholder text color\r\n                  }}\r\n                  sx={{ marginBottom: '10px', marginLeft: '110px' }} // Adding styling\r\n                  onFocus={handleFocus} // Handling input focus\r\n                  onBlur={handleBlur} // Handling input blur\r\n                />\r\n              </div> // Closing the div container\r\n              <div style={{ display: 'flex', alignItems: 'center' }}> // Opening a div container with styling\r\n                <Label style={{ backgroundColor: 'white', height: '30px', width: '120px', display: 'inline-block', textAlign: 'center' }}>Gender</Label> // Rendering a label\r\n                <StyledTextField // Rendering the StyledTextField component\r\n                  variant=\"standard\"\r\n                  placeholder=\"Your Gender\"\r\n                  InputLabelProps={{\r\n                    style: { display: 'none' }, // Hide label when TextField is focused\r\n                  }}\r\n                  InputProps={{\r\n                    style: { color: isUsernameFocused ? 'white' : 'inherit', background: 'black' }, // Setting input text color and background based on focus\r\n                    placeholderTextColor: 'white', // Set placeholder text color\r\n                  }}\r\n                  sx={{ marginBottom: '10px', marginLeft: '110px' }} // Adding styling\r\n                  onFocus={handleFocus} // Handling input focus\r\n                  onBlur={handleBlur} // Handling input blur\r\n                />\r\n              </div> // Closing the div container\r\n              <div style={{ display: 'flex', alignItems: 'center' }}> // Opening a div container with styling\r\n                <Label style={{ backgroundColor: 'white', height: '30px', width: '120px', display: 'inline-block', textAlign: 'center' }}>Age</Label> // Rendering a label\r\n                <StyledTextField // Rendering the StyledTextField component\r\n                  variant=\"standard\"\r\n                  placeholder=\"Your Age\"\r\n                  InputLabelProps={{\r\n                    style: { display: 'none' }, // Hide label when TextField is focused\r\n                  }}\r\n                  InputProps={{\r\n                    style: { color: isUsernameFocused ? 'white' : 'inherit', background: 'black' }, // Setting input text color and background based on focus\r\n                    placeholderTextColor: 'white', // Set placeholder text color\r\n                  }}\r\n                  sx={{ marginBottom: '10px', marginLeft: '110px' }} // Adding styling\r\n                  onFocus={handleFocus} // Handling input focus\r\n                  onBlur={handleBlur} // Handling input blur\r\n                />\r\n              </div> // Closing the div container\r\n              <div style={{ display: 'flex', alignItems: 'center' }}> // Opening a div container with styling\r\n                <Label style={{ backgroundColor: 'white', height: '30px', width: '120px', display: 'inline-block', textAlign: 'center' }}>Mobile</Label> // Rendering a label\r\n                <StyledTextField // Rendering the StyledTextField component\r\n                  variant=\"standard\"\r\n                  placeholder=\"Your Mobile.No\"\r\n                  InputLabelProps={{\r\n                    style: { display: 'none' }, // Hide label when TextField is focused\r\n                  }}\r\n                  InputProps={{\r\n                    style: { color: isUsernameFocused ? 'white' : 'inherit', background: 'black' }, // Setting input text color and background based on focus\r\n                    placeholderTextColor: 'white', // Set placeholder text color\r\n                  }}\r\n                  sx={{ marginBottom: '10px', marginLeft: '110px' }} // Adding styling\r\n                  onFocus={handleFocus} // Handling input focus\r\n                  onBlur={handleBlur} // Handling input blur\r\n                />\r\n              </div> // Closing the div container\r\n              <Button // Rendering a Button component\r\n                variant=\"contained\"\r\n                style={{\r\n                  width: '60%', // Setting width\r\n                  background: 'linear-gradient(to right, white 48%, black 50%)', // Adding a linear gradient background\r\n                  color: 'green', // Setting text color\r\n                  marginBottom: '10px', // Adding margin bottom\r\n                }}\r\n              >\r\n                 <BoldBlackText>Sig</BoldBlackText> // Rendering bold black text\r\n                <BoldWhiteText> nup</BoldWhiteText> // Rendering bold white text\r\n              </Button> // Closing the Button component\r\n            </> // Closing the fragment\r\n          )}\r\n        </Wrapper> // Closing the styled wrapper\r\n      </Box> // Closing the Box component \r\n    </Component> // Closing the styled component\r\n  );\r\n};\r\n\r\nexport default Login; // Exporting the Login component"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}