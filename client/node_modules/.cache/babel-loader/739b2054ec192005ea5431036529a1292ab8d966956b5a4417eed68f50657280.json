{"ast":null,"code":"var _jsxFileName = \"F:\\\\Blog-Page\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { BrowserRouter, Route, Routes, Navigate } from 'react-router-dom';\nimport Login from './components/account/Login';\nimport Home from './components/home/Home';\nimport Header from './components/headers/Header';\nimport CreatePost from './components/create/CreatePost';\nimport LoginHeader from './components/loginheader/LoginHeader';\n\n// State management (replace with your preferred library if needed)\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Track login status\n\n  // Handle login logic (replace with your actual authentication mechanism)\n  const handleLogin = () => {\n    setIsLoggedIn(true);\n  };\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [isLoggedIn ? /*#__PURE__*/_jsxDEV(LoginHeader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 39\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 8\n      },\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            onLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 22\n          }, this) // Pass login function to Login component\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/create\",\n          element: /*#__PURE__*/_jsxDEV(CreatePost, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/loginheader\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\",\n            replace: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n_c = App;\nexport default App;\n\n// import { BrowserRouter, Route, Routes, Navigate } from 'react-router-dom';\n// import Login from './components/account/Login';\n// import Home from './components/home/Home';\n// import Header from './components/headers/Header';\n// import CreatePost from './components/create/CreatePost'; // Ensure correct import path\n// import LoginHeader from './components/loginheader/LoginHeader';\n\n// // State management (replace with your preferred library if needed)\n// import { useState, createContext, useContext } from 'react';\n\n// const AuthContext = createContext(false); // Default isLoggedIn to false\n\n// function App() {\n//   const [isLoggedIn, setIsLoggedIn] = useState(false); // Track login status\n\n//   // Handle login logic (replace with your actual authentication mechanism)\n//   const handleLogin = () => {\n//     setIsLoggedIn(true);\n//   };\n\n//   return (\n//     <BrowserRouter>\n//       <AuthContext.Provider value={{ isLoggedIn, setIsLoggedIn }}>\n//         {/* Conditionally render headers based on login status */}\n//         {isLoggedIn ? <Header /> : <LoginHeader />}\n\n//         <div style={{ marginTop: 8 }}>\n//           <Routes>\n//             <Route\n//               path=\"/login\"\n//               element={<Login onLogin={handleLogin} />} // Pass login function to Login component\n//             />\n//             <Route path=\"/\" element={<Home />} />\n//             <Route path=\"/create\" element={<CreatePost />} /> {/* Unconditional rendering of CreatePost */}\n//             <Route path=\"/loginheader\" element={<Navigate to=\"/\" replace />} /> {/* Redirect from loginheader to home */}\n//           </Routes>\n//         </div>\n//       </AuthContext.Provider>\n//     </BrowserRouter>\n//   );\n// }\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["BrowserRouter","Route","Routes","Navigate","Login","Home","Header","CreatePost","LoginHeader","useState","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","handleLogin","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginTop","path","element","onLogin","to","replace","_c","$RefreshReg$"],"sources":["F:/Blog-Page/client/src/App.js"],"sourcesContent":["import { BrowserRouter, Route, Routes, Navigate } from 'react-router-dom';\nimport Login from './components/account/Login';\nimport Home from './components/home/Home';\nimport Header from './components/headers/Header';\nimport CreatePost from './components/create/CreatePost';\nimport LoginHeader from './components/loginheader/LoginHeader';\n\n// State management (replace with your preferred library if needed)\nimport { useState } from 'react';\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Track login status\n\n  // Handle login logic (replace with your actual authentication mechanism)\n  const handleLogin = () => {\n    setIsLoggedIn(true);\n  };\n\n  return (\n    <BrowserRouter>\n      {/* Conditionally render headers based on login status */}\n      {isLoggedIn ? <LoginHeader /> : <Header />}\n\n      <div style={{ marginTop: 8 }}>\n        <Routes>\n          <Route\n            path=\"/login\"\n            element={<Login onLogin={handleLogin} />} // Pass login function to Login component\n          />\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/create\" element={<CreatePost />} />\n          <Route path=\"/loginheader\" element={<Navigate to=\"/\" replace />} /> {/* Redirect from loginheader to home */}\n        </Routes>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n\n\n// import { BrowserRouter, Route, Routes, Navigate } from 'react-router-dom';\n// import Login from './components/account/Login';\n// import Home from './components/home/Home';\n// import Header from './components/headers/Header';\n// import CreatePost from './components/create/CreatePost'; // Ensure correct import path\n// import LoginHeader from './components/loginheader/LoginHeader';\n\n// // State management (replace with your preferred library if needed)\n// import { useState, createContext, useContext } from 'react';\n\n// const AuthContext = createContext(false); // Default isLoggedIn to false\n\n// function App() {\n//   const [isLoggedIn, setIsLoggedIn] = useState(false); // Track login status\n\n//   // Handle login logic (replace with your actual authentication mechanism)\n//   const handleLogin = () => {\n//     setIsLoggedIn(true);\n//   };\n\n//   return (\n//     <BrowserRouter>\n//       <AuthContext.Provider value={{ isLoggedIn, setIsLoggedIn }}>\n//         {/* Conditionally render headers based on login status */}\n//         {isLoggedIn ? <Header /> : <LoginHeader />}\n\n//         <div style={{ marginTop: 8 }}>\n//           <Routes>\n//             <Route\n//               path=\"/login\"\n//               element={<Login onLogin={handleLogin} />} // Pass login function to Login component\n//             />\n//             <Route path=\"/\" element={<Home />} />\n//             <Route path=\"/create\" element={<CreatePost />} /> {/* Unconditional rendering of CreatePost */}\n//             <Route path=\"/loginheader\" element={<Navigate to=\"/\" replace />} /> {/* Redirect from loginheader to home */}\n//           </Routes>\n//         </div>\n//       </AuthContext.Provider>\n//     </BrowserRouter>\n//   );\n// }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}