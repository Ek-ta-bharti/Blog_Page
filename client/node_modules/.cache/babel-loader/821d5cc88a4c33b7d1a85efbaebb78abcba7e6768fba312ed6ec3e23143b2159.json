{"ast":null,"code":"var _jsxFileName = \"F:\\\\Blog-Page\\\\client\\\\src\\\\components\\\\home\\\\Categories.jsx\",\n  _s = $RefreshSig$();\n// import { TableBody, TableCell, TableRow, Table, TableHead, styled, InputBase } from '@mui/material';\n// import { categories } from '../../constants/data';\n// import { useMediaQuery } from '@mui/material';\n\n// const StyledTable = styled(Table)`\n//     border: 10px solid rgba(224, 224, 224, 1);\n// `;\n\n// const TableeCell = styled(TableCell)`\n//     text-align: center;\n//     background-color: white; \n//     color: black; \n//     font-weight: bold; \n//     text-transform: uppercase; \n// `;\n\n// const InputCell = styled(TableCell)`\n//     display: flex;\n//     align-items: center;\n// `;\n\n// const InputTextField = styled(InputBase)`\n//     flex: 1;\n//     margin-left: 10px;\n//     font-size: 20px;\n//     background-color: white; /* Set background color to white */\n// `;\n\n// const BlackTableBody = styled(TableBody)`\n//     background-color: black; /* Set background color to black */\n// `;\n\n// const WhiteTableCell = styled(TableCell)`\n//     color: white; /* Set text color to white */\n// `;\n\n// const Categories = () => {\n//     const isSmallScreen = useMediaQuery('(max-width:600px)');\n\n//     return (\n//         <>\n//             <StyledTable>\n//                 <TableHead>\n//                     <TableRow>\n//                         <TableeCell>\n//                             FILTER\n//                         </TableeCell>\n//                     </TableRow>\n//                 </TableHead>\n//                 <BlackTableBody>\n//                     {categories.map(category => (\n//                         <TableRow key={category.id}>\n//                             <WhiteTableCell>\n//                                 {category.type}\n//                             </WhiteTableCell>\n//                             {isSmallScreen ? ( // Conditionally render based on screen size\n//                                 <InputCell>\n//                                     <InputTextField placeholder=\"Search\" />\n//                                 </InputCell>\n//                             ) : null}\n//                         </TableRow>\n//                     ))}\n//                 </BlackTableBody>\n//             </StyledTable>\n//         </>\n//     );\n// };\n\n// export default Categories;\nimport React, { useState, useEffect } from 'react';\nimport { AppBar, Toolbar, Typography, Box, Button } from '@mui/material';\nimport lines from '../../constants/lines';\nimport { useMediaQuery } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = () => {\n  _s();\n  const [currentLine, setCurrentLine] = useState(0);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentLine(prevLine => (prevLine + 1) % lines.length);\n    }, 3000);\n    return () => clearInterval(interval);\n  }, []);\n  const maxLength = Math.max(...lines.map(line => line.length));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      overflowX: 'hidden'\n    },\n    children: /*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      sx: {\n        backgroundColor: 'black'\n      },\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            alignItems: 'center',\n            marginLeft: '290px',\n            marginRight: 'auto'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"div\",\n            children: \"LIFE IS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            sx: {\n              wordWrap: 'break-word',\n              backgroundColor: 'white',\n              padding: '20px',\n              marginTop: '20px',\n              marginBottom: '20px',\n              marginLeft: '10px',\n              marginRight: `${maxLength * 8}px`,\n              color: 'black',\n              boxShadow: '0px 0px 5px 2px rgba(0,0,0,0.2)'\n            },\n            children: lines[currentLine]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          style: {\n            color: 'black',\n            backgroundColor: 'white',\n            marginBottom: '20px',\n            marginLeft: '30px',\n            marginRight: '20px',\n            boxShadow: '0px 0px 5px 2px rgba(0,0,0,0.2)'\n          },\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          style: {\n            color: 'white',\n            backgroundColor: 'black',\n            marginBottom: '20px',\n            marginRight: '80px',\n            border: '1px solid white',\n            boxShadow: '0px 0px 5px 2px rgba(0,0,0,0.2)'\n          },\n          children: \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(Header, \"Wm9H+p0rL29+hGzSUKUCJElQfGA=\");\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","useEffect","AppBar","Toolbar","Typography","Box","Button","lines","useMediaQuery","jsxDEV","_jsxDEV","Header","_s","currentLine","setCurrentLine","interval","setInterval","prevLine","length","clearInterval","maxLength","Math","max","map","line","style","overflowX","children","position","sx","backgroundColor","display","justifyContent","width","alignItems","marginLeft","marginRight","variant","component","fileName","_jsxFileName","lineNumber","columnNumber","wordWrap","padding","marginTop","marginBottom","color","boxShadow","border","_c","$RefreshReg$"],"sources":["F:/Blog-Page/client/src/components/home/Categories.jsx"],"sourcesContent":["// import { TableBody, TableCell, TableRow, Table, TableHead, styled, InputBase } from '@mui/material';\r\n// import { categories } from '../../constants/data';\r\n// import { useMediaQuery } from '@mui/material';\r\n\r\n// const StyledTable = styled(Table)`\r\n//     border: 10px solid rgba(224, 224, 224, 1);\r\n// `;\r\n\r\n// const TableeCell = styled(TableCell)`\r\n//     text-align: center;\r\n//     background-color: white; \r\n//     color: black; \r\n//     font-weight: bold; \r\n//     text-transform: uppercase; \r\n// `;\r\n\r\n// const InputCell = styled(TableCell)`\r\n//     display: flex;\r\n//     align-items: center;\r\n// `;\r\n\r\n// const InputTextField = styled(InputBase)`\r\n//     flex: 1;\r\n//     margin-left: 10px;\r\n//     font-size: 20px;\r\n//     background-color: white; /* Set background color to white */\r\n// `;\r\n\r\n// const BlackTableBody = styled(TableBody)`\r\n//     background-color: black; /* Set background color to black */\r\n// `;\r\n\r\n// const WhiteTableCell = styled(TableCell)`\r\n//     color: white; /* Set text color to white */\r\n// `;\r\n\r\n// const Categories = () => {\r\n//     const isSmallScreen = useMediaQuery('(max-width:600px)');\r\n\r\n//     return (\r\n//         <>\r\n//             <StyledTable>\r\n//                 <TableHead>\r\n//                     <TableRow>\r\n//                         <TableeCell>\r\n//                             FILTER\r\n//                         </TableeCell>\r\n//                     </TableRow>\r\n//                 </TableHead>\r\n//                 <BlackTableBody>\r\n//                     {categories.map(category => (\r\n//                         <TableRow key={category.id}>\r\n//                             <WhiteTableCell>\r\n//                                 {category.type}\r\n//                             </WhiteTableCell>\r\n//                             {isSmallScreen ? ( // Conditionally render based on screen size\r\n//                                 <InputCell>\r\n//                                     <InputTextField placeholder=\"Search\" />\r\n//                                 </InputCell>\r\n//                             ) : null}\r\n//                         </TableRow>\r\n//                     ))}\r\n//                 </BlackTableBody>\r\n//             </StyledTable>\r\n//         </>\r\n//     );\r\n// };\r\n\r\n// export default Categories;\r\nimport React, { useState, useEffect } from 'react';\r\nimport { AppBar, Toolbar, Typography, Box, Button } from '@mui/material';\r\nimport lines from '../../constants/lines'; \r\nimport { useMediaQuery } from '@mui/material';\r\n\r\nconst Header = () => {\r\n  const [currentLine, setCurrentLine] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCurrentLine((prevLine) => (prevLine + 1) % lines.length);\r\n    }, 3000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const maxLength = Math.max(...lines.map(line => line.length)); \r\n\r\n  return (\r\n    <div style={{ overflowX: 'hidden' }}> \r\n      <AppBar position=\"static\" sx={{ backgroundColor: 'black' }}>\r\n        <Toolbar sx={{ display: 'flex', justifyContent: 'center', width: '100%' }}>\r\n          <Box sx={{ display: 'flex', alignItems: 'center', marginLeft: '290px', marginRight: 'auto' }}>\r\n            <Typography variant=\"h6\" component=\"div\">\r\n              LIFE IS\r\n            </Typography>\r\n            <Typography variant=\"body1\" sx={{ wordWrap: 'break-word', backgroundColor: 'white', padding: '20px', marginTop: '20px', marginBottom: '20px', marginLeft: '10px', marginRight: `${maxLength * 8}px`, color: 'black', boxShadow: '0px 0px 5px 2px rgba(0,0,0,0.2)' }}>\r\n              {lines[currentLine]}\r\n            </Typography>\r\n          </Box>\r\n          <Button variant=\"contained\" style={{ color: 'black', backgroundColor: 'white', marginBottom: '20px', marginLeft: '30px', marginRight: '20px', boxShadow: '0px 0px 5px 2px rgba(0,0,0,0.2)' }}>Login</Button>\r\n          <Button variant=\"contained\" style={{ color: 'white', backgroundColor: 'black', marginBottom: '20px',  marginRight: '80px', border: '1px solid white', boxShadow: '0px 0px 5px 2px rgba(0,0,0,0.2)' }}>Signup</Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}